/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_qbyteconsulting_HyperOrderIF.h"
#include "HyperOrderIFPeer.h"

/*
 *  Stub peer functions for class com_qbyteconsulting_HyperOrderIF.
 *  This looks up the appropriate peer object and calls the
 *  associated peer methods.
 *
 *  Generated by: JPeerGen v0.9.0 - http://jpeergen.sf.net/
 */

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    initialiseDLL
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_qbyteconsulting_HyperOrderIF_initialiseDLL
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_initialiseDLL( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    isHostRunning
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qbyteconsulting_HyperOrderIF_isHostRunning
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_isHostRunning( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    isHostConnected
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qbyteconsulting_HyperOrderIF_isHostConnected
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_isHostConnected( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getAccountCashBalance
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_qbyteconsulting_HyperOrderIF_getAccountCashBalance
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_getAccountCashBalance( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getAccountUpdateTime
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qbyteconsulting_HyperOrderIF_getAccountUpdateTime
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_getAccountUpdateTime( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getAccountItem
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_com_qbyteconsulting_HyperOrderIF_getAccountItem
  (JNIEnv *env, jclass selfClass, jint number)
{
    return HyperOrderIFPeer::Java_getAccountItem( env, selfClass, number);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getFirstOpenOrder
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_getFirstOpenOrder
  (JNIEnv *env, jclass selfClass)
{
    return HyperOrderIFPeer::Java_getFirstOpenOrder( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getNextOpenOrder
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_getNextOpenOrder
  (JNIEnv *env, jclass selfClass, jlong prevOrdId)
{
    return HyperOrderIFPeer::Java_getNextOpenOrder( env, selfClass, prevOrdId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    buyMarket
 * Signature: ([C[C[C[CF[C[CI)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_buyMarket
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity)
{
    return HyperOrderIFPeer::Java_buyMarket( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    sellMarket
 * Signature: ([C[C[C[CF[C[CI)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_sellMarket
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity)
{
    return HyperOrderIFPeer::Java_sellMarket( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    buyLimit
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_buyLimit
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat limitPrice)
{
    return HyperOrderIFPeer::Java_buyLimit( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, limitPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    sellLimit
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_sellLimit
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat limitPrice)
{
    return HyperOrderIFPeer::Java_sellLimit( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, limitPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    buyStop
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_buyStop
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxPrice)
{
    return HyperOrderIFPeer::Java_buyStop( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    sellStop
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_sellStop
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxPrice)
{
    return HyperOrderIFPeer::Java_sellStop( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    buyStopLimit
 * Signature: ([C[C[C[CF[C[CIFF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_buyStopLimit
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxPrice, jfloat limitPrice)
{
    return HyperOrderIFPeer::Java_buyStopLimit( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxPrice, limitPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    sellStopLimit
 * Signature: ([C[C[C[CF[C[CIFF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_sellStopLimit
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxPrice, jfloat limitPrice)
{
    return HyperOrderIFPeer::Java_sellStopLimit( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxPrice, limitPrice);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    BuyTrailStop
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_BuyTrailStop
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxDistance)
{
    return HyperOrderIFPeer::Java_BuyTrailStop( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxDistance);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    sellTrailStop
 * Signature: ([C[C[C[CF[C[CIF)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_sellTrailStop
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency, jint quantity, jfloat auxDistance)
{
    return HyperOrderIFPeer::Java_sellTrailStop( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency, quantity, auxDistance);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    cancelOrder
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_cancelOrder
  (JNIEnv *env, jclass selfClass, jlong orderId)
{
    HyperOrderIFPeer::Java_cancelOrder( env, selfClass, orderId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    cancelAll
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_cancelAll
  (JNIEnv *env, jclass selfClass)
{
    HyperOrderIFPeer::Java_cancelAll( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    cancelAllFor
 * Signature: ([C[C[C[CF[C[C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_cancelAllFor
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency)
{
    HyperOrderIFPeer::Java_cancelAllFor( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getMarketPosition
 * Signature: ([C[C[C[CF[C)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_getMarketPosition
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring currency)
{
    return HyperOrderIFPeer::Java_getMarketPosition( env, selfClass, symbol, symType, expiry, right, strike, currency);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    closePositionFor
 * Signature: ([C[C[C[CF[C[C)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_closePositionFor
  (JNIEnv *env, jclass selfClass, jstring symbol, jstring symType, jstring expiry, jstring right, jfloat strike, jstring exchange, jstring currency)
{
    return HyperOrderIFPeer::Java_closePositionFor( env, selfClass, symbol, symType, expiry, right, strike, exchange, currency);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    startOCAGroup
 * Signature: ([C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_startOCAGroup
  (JNIEnv *env, jclass selfClass, jstring ocaGroup)
{
    HyperOrderIFPeer::Java_startOCAGroup( env, selfClass, ocaGroup);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    stopOCAGroup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_stopOCAGroup
  (JNIEnv *env, jclass selfClass)
{
    HyperOrderIFPeer::Java_stopOCAGroup( env, selfClass);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    setTIF
 * Signature: ([C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_setTIF
  (JNIEnv *env, jclass selfClass, jstring tif)
{
    HyperOrderIFPeer::Java_setTIF( env, selfClass, tif);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getOrderStatus
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_qbyteconsulting_HyperOrderIF_getOrderStatus
  (JNIEnv *env, jclass selfClass, jlong orderId)
{
    return HyperOrderIFPeer::Java_getOrderStatus( env, selfClass, orderId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getOrderPrice
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_qbyteconsulting_HyperOrderIF_getOrderPrice
  (JNIEnv *env, jclass selfClass, jlong orderId)
{
    return HyperOrderIFPeer::Java_getOrderPrice( env, selfClass, orderId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getOrderFilled
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_getOrderFilled
  (JNIEnv *env, jclass selfClass, jlong orderId)
{
    return HyperOrderIFPeer::Java_getOrderFilled( env, selfClass, orderId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    getOrderRemaining
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_getOrderRemaining
  (JNIEnv *env, jclass selfClass, jlong orderId)
{
    return HyperOrderIFPeer::Java_getOrderRemaining( env, selfClass, orderId);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    writeIntValue
 * Signature: ([CI)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_writeIntValue
  (JNIEnv *env, jclass selfClass, jstring name, jint value)
{
    HyperOrderIFPeer::Java_writeIntValue( env, selfClass, name, value);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    readIntValue
 * Signature: ([C)I
 */
JNIEXPORT jint JNICALL Java_com_qbyteconsulting_HyperOrderIF_readIntValue
  (JNIEnv *env, jclass selfClass, jstring name)
{
    return HyperOrderIFPeer::Java_readIntValue( env, selfClass, name);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    writeLongValue
 * Signature: ([CJ)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_writeLongValue
  (JNIEnv *env, jclass selfClass, jstring name, jlong value)
{
    HyperOrderIFPeer::Java_writeLongValue( env, selfClass, name, value);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    readLongValue
 * Signature: ([C)J
 */
JNIEXPORT jlong JNICALL Java_com_qbyteconsulting_HyperOrderIF_readLongValue
  (JNIEnv *env, jclass selfClass, jstring name)
{
    return HyperOrderIFPeer::Java_readLongValue( env, selfClass, name);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    writeFloatValue
 * Signature: ([CF)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_writeFloatValue
  (JNIEnv *env, jclass selfClass, jstring name, jfloat value)
{
    HyperOrderIFPeer::Java_writeFloatValue( env, selfClass, name, value);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    readFloatValue
 * Signature: ([C)F
 */
JNIEXPORT jfloat JNICALL Java_com_qbyteconsulting_HyperOrderIF_readFloatValue
  (JNIEnv *env, jclass selfClass, jstring name)
{
    return HyperOrderIFPeer::Java_readFloatValue( env, selfClass, name);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    writeStringValue
 * Signature: ([C[C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_writeStringValue
  (JNIEnv *env, jclass selfClass, jstring name, jstring value)
{
    HyperOrderIFPeer::Java_writeStringValue( env, selfClass, name, value);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    readStringValue
 * Signature: ([C)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_qbyteconsulting_HyperOrderIF_readStringValue
  (JNIEnv *env, jclass selfClass, jstring name)
{
    return HyperOrderIFPeer::Java_readStringValue( env, selfClass, name);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    soundAlert
 * Signature: ([C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_soundAlert
  (JNIEnv *env, jclass selfClass, jstring path)
{
    HyperOrderIFPeer::Java_soundAlert( env, selfClass, path);
}

/*
 * Class:     com_qbyteconsulting_HyperOrderIF
 * Method:    popupAlert
 * Signature: ([C[C)V
 */
JNIEXPORT void JNICALL Java_com_qbyteconsulting_HyperOrderIF_popupAlert
  (JNIEnv *env, jclass selfClass, jstring text, jstring path)
{
    HyperOrderIFPeer::Java_popupAlert( env, selfClass, text, path);
}

#ifdef __cplusplus
}
#endif
